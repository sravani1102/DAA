#include <stdio.h>
#include<stdlib.h>
int parent[7];
void union1(int i,int j)
{
    parent[j]=i;
}
int find(int u)
{
    
    while(parent[u]!=-1)
    {
        
        u=parent[u];
    }
    return u;
}
int kurskal(int **a)
{
    int l,u;
    for(int i=0;i<7;i++)
    {
        parent[i]=-1;
    }
    int i=0,mincost=0;
    int j=0;
    while(j<6)
    {
        l=find(a[i][0]);
        u=find(a[i][1]);
        if(l!=u || l==-1 && u==-1)
        {
            mincost=mincost+a[i][2];
            printf("%d ",mincost);
            union1(a[i][0],a[i][1]);
            j++;
        }
        i++;
    }
    return mincost;
    
}
void swap(int *b,int *c)
{
    int t;
    t=*b;
    *b=*c;
    *c=t;
}
void sort(int **a)
{
    for(int i=0;i<8;i++)
    {
        for(int j=i+1;j<9;j++)
        {
            if(a[i][2]>a[j][2])
            {
                swap(&a[i][0],&a[j][0]);
                swap(&a[i][1],&a[j][1]);
                swap(&a[i][2],&a[j][2]);
            }
        }
    }
}
int main()
{
    int n=7,e=9;
    int *a[9];
    //a=(int **)malloc(9*sizeof(int));
    for(int i=0;i<9;i++)
    {
        a[i]=(int *)malloc(3*sizeof(int));
    }
    a[0][0]=1;
    a[0][1]=2;
    a[0][2]=25;
    a[1][0]=1;
    a[1][1]=6;
    a[1][2]=22;
    a[2][0]=2;
    a[2][1]=3;
    a[2][2]=17;
    a[3][0]=3;
    a[3][1]=4;
    a[3][2]=18;
    a[4][0]=4;
    a[4][1]=5;
    a[4][2]=19;
    a[5][0]=5;
    a[5][1]=6;
    a[5][2]=20;
    a[6][0]=5;
    a[6][1]=7;
    a[6][2]=21;
    a[7][0]=2;
    a[7][1]=7;
    a[7][2]=14;
    a[8][0]=4;
    a[8][1]=7;
    a[8][2]=19;
    sort(a);
    for(int i=0;i<e;i++)
    {
        for(int j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
        
    }
    int m=kurskal(a);
    printf("\n%d ",m);
}
